<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 3.2.0 using Zeebe 8.5.x/ SporingBoot 3.3.x -->
    <!-- 3.4.0 Multi tenant access -->
    <groupId>io.camunda.community</groupId>
    <artifactId>blueberry</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <properties>
        <java.version>21</java.version>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>

        <!-- versin in https://central.sonatype.com/artifact/io.camunda.connector/connector-validation/versions -->
        <!--Version 8.3.0-->
        <version.zeebe>8.6.5</version.zeebe>
        <!--Version 8.3.3-->
        <!-- <version.zeebe-client>8.5.5</version.zeebe-client> -->
        <!--Version 8.3.1-->

        <version.operate-client>8.6.2</version.operate-client>

        <!-- 2.7.4 -->
        <!-- According https://github.com/camunda-community-hub/spring-zeebe/blob/main/pom.xml -->
        <version.spring.boot>3.3.0</version.spring.boot>

        <version.junit.jupiter>5.9.1</version.junit.jupiter>
        <version.opensagres>2.0.3</version.opensagres>

    </properties>


    <!-- Push the library to Maven -->
    <!-- Visit https://github.com/camunda-community-hub/community-action-maven-release -->
    <parent>
        <groupId>org.camunda.community</groupId>
        <artifactId>community-hub-release-parent</artifactId>
        <version>1.4.2</version>
    </parent>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${version.spring.boot}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>


        <dependency>
            <groupId>io.camunda</groupId>
            <artifactId>spring-boot-starter-camunda-sdk</artifactId>
            <version>${version.zeebe}</version>
        </dependency>



        <!-- https://mvnrepository.com/artifact/io.camunda.connector/connector-validation -->


        <!-- JSON LocalDateTime -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.19.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10</version>
        </dependency>

        <!-- Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${version.spring.boot}</version>
        </dependency>
        <!-- JPA to save entity -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Process the configuration file -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Access the pom.xml to read the version -->
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-model</artifactId>
            <version>3.8.4</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->

        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client</artifactId>
            <version>7.1.0</version>  <!-- Use the latest version -->
        </dependency>



        <!-- Docker -->
        <dependency>
            <groupId>com.github.docker-java</groupId>
            <artifactId>docker-java</artifactId>
            <version>3.3.4</version>
        </dependency>


        <!-- tests -->
        <dependency>
            <groupId>io.zeebe</groupId>
            <artifactId>zeebe-worker-java-testutils</artifactId>
            <version>8.1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.junit.jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.junit.jupiter}</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>

        <plugins>
            <!-- connect the React application in the Springboot application -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.1</version>
                <configuration>
                    <workingDirectory>${project.basedir}/src/main/frontend</workingDirectory>
                    <installDirectory>${project.basedir}/target</installDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v18.5.0</nodeVersion>
                            <npmVersion>8.12.1</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes/static/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/frontend/build/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.3.2</version>
                    </dependency>
                </dependencies>
            </plugin>


            <plugin>
                <!-- see https://github.com/camunda-community-hub/spring-zeebe?tab=readme-ov-file#configuring-camunda-8
                -connection -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- allow mvn spring-boot:run -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>3.0.6</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <classifier>exec</classifier>
                    <mainClass>io.camunda.BlueberryApplication</mainClass>
                    <image>
                        <name>ghcr.io/camunda-community-hub/blueberry:latest</name>
                    </image>
                </configuration>
            </plugin>

        </plugins>
    </build>


    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>identity</id>
            <name>Camunda Identity</name>
            <url>https://artifacts.camunda.com/artifactory/camunda-identity/</url>
        </repository>

        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>connectors</id>
            <name>Connectors Repository</name>
            <url>https://artifacts.camunda.com/artifactory/connectors/</url>
        </repository>

        <repository>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>connectors-snapshots</id>
            <name>Connectors Snapshot Repository</name>
            <url>https://artifacts.camunda.com/artifactory/connectors-snapshots/</url>
        </repository>

        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>camunda-community</id>
            <name>Camunda Community</name>
            <url>https://artifacts.camunda.com/artifactory/camunda-bpm-community-extensions/</url>
        </repository>


    </repositories>
</project>
